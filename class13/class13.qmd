---
title: "class 13"
author: "Loretta Cheng"
format: pdf
---

## Section 1. Differential Expression Analysis 

we will be loading our files into the project using DESeq2

```{r}
library(DESeq2)
```

```{r}
meta <- read.csv("GSE37704_metadata.csv")
count <- read.csv("GSE37704_featurecounts.csv")
```

We will be taking a peak of the metadata: 

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names =1)
head(colData)
```

We will now be importing count data: 

```{r}
countData <- read.csv("GSE37704_featurecounts.csv", row.names=1)
head(countData)
```

>Q. We will be removing the first column from countData. 

```{r}
countData <- as.matrix(countData[,-1])
head(countData)
```

>Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
countData <- countData[rowSums(countData) > 0, ]
head(countData)

```

## Running DESeq2

```{r}
dds <- DESeqDataSetFromMatrix(
  countData=countData,colData=colData, design=~condition)

dds <-  DESeq(dds)
```

```{r}
res <- results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

We will now use the `summary()` function to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff. 

```{r}
summary(res)
```

# Volcano Plot 

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

>Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
mycols <- rep("gray", nrow(res) )
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"
plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

# Adding gene annotation 

>Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol <- mapIds(org.Hs.eg.db,
                     keys = row.names(res),
                     keytype = "ENSEMBL",
                     column = "SYMBOL",
                     multiVals = "first")

res$entrez <- mapIds(org.Hs.eg.db,
                     keys = row.names(res),
                     keytype = "ENSEMBL",
                     column = "ENTREZID",
                     multiVals = "first")

res$name <- mapIds(org.Hs.eg.db,
                   keys = row.names(res),
                   keytype = "ENSEMBL",
                   column = "GENENAME",
                   multiVals = "first")

head(res, 10)
```

>Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res <- res[order(res$padj), ]
write.csv(res, file = "deseq_results.csv")
```

## Section 2. Pathway Analysis

We now upload the packages and set up KEGG data-sets we need. 

```{r}
library(pathview)
```

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

kegg.sets.hs <-  kegg.sets.hs[sigmet.idx.hs]
head(kegg.sets.hs, 3)

```


```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

We used the `gage()` function requires a named vector of fold changes. 

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
head(keggres$less)
```

We will now try the `pathview()` function to make a pathway plot with our RNA-seq expression results shown in color. 

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
keggrespathways <- rownames(keggres$greater)[1:5]

keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

>Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

Yes we can. We can do `install.packages("pathview")` and `library(pathview)` to plot the pathview figures for the top 5 down-regulated pathways. 

## Section 3. Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

## Section 4 Reactome Analysis 

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


